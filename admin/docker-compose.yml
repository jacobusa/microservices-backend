version: "3.2"
services:
  admin-backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./.env
    # command: "python manage.py runserver 0.0.0.0:8000"
    # command: "uwsgi --socket :8000 --master  --enable-threads --module admin.wsgi"
    # ports:
    #   - 8000:8000
    volumes:
      - .:/app
    depends_on:
      - admin-db
        # condition: service_healthy
  admin-queue:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./.env
    command: "python consumer.py"
    depends_on:
      - admin-db
  admin-proxy:
    build:
      context: ./nginx
    ports:
      - "8080:80"
    depends_on:
      - admin-backend
  admin-db:
    image: mysql:5.7.22
    restart: always
    volumes:
      - .dbdata:/var/lib/mysql
    ports:
      - 3308:3306
    env_file:
      - ./.env
    # healthcheck:
    #   test: '/usr/bin/mysql --user=$MYSQL_USER --password=$MYSQL_PASSWORD --execute "SHOW DATABASES";'
    #   interval: 2s
    #   timeout: 30s
    #   retries: 15
    # logging:
    #   driver: "none"

  # phpmyadmin:
  #   image: phpmyadmin
  #   restart: always
  #   ports:
  #     - 5555:80
  #   environment:
  #     PMA_HOST: db
  #   logging:
  #     driver: "none"
networks:
  default:
    name: micro-network

